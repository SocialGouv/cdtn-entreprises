include:
  - project: SocialGouv/gitlab-ci-yml
    file: /autodevops.yml
    ref: v21.0.0

variables:
  AUTO_DEVOPS_TEST_DISABLED: "ðŸ›‘"
  AUTO_DEVOPS_QUALITY_DISABLED: "ðŸ›‘"
  AUTO_DEVOPS_KANIKO: "ðŸ›‘"
  AUTO_DEVOPS_ENABLE_KAPP: "ðŸ›‘"
  AUTO_DEVOPS_RELEASE_AUTO: "ðŸš€"
  AUTO_DEVOPS_PRODUCTION_AUTO: "ðŸš€"

Install:
  rules:
    - when: never

Build:
  rules:
    - when: never

Register Kaniko image:
  extends: .autodevops_register_kaniko_image
  needs: []
  variables:
    CONTEXT: ./index
    IMAGE_NAME: recherche-entreprises-index

Register API image:
  extends: .autodevops_register_kaniko_image
  needs: []
  variables:
    CONTEXT: ./api
    IMAGE_NAME: recherche-entreprises-api


.indexing_job:
  stage: Deploy
  extends:
    - .base_deploy_kosko_stage
  allow_failure: true

Download and Index (dev):
  extends:
    - .indexing_job
  rules:
    - if: "$CI_COMMIT_TAG"
      when: never
    - when: manual
  variables:
    KOSKO_GENERATE_ARGS: --env dev jobs/indexing
  environment:
    name: ${CI_COMMIT_REF_NAME}${AUTO_DEVOPS_DEV_ENVIRONMENT_NAME}
    url: https://${CI_ENVIRONMENT_SLUG}-${CI_PROJECT_NAME}.${KUBE_INGRESS_BASE_DOMAIN}

Download and Index (prod):
  extends:
    - .indexing_job
  rules:
    - if: "$CI_COMMIT_TAG"
      when: manual
  variables:
    KOSKO_GENERATE_ARGS: --env prod jobs/indexing
  environment:
    name: ${AUTO_DEVOPS_PROD_ENVIRONMENT_NAME}
    url: https://${CI_PROJECT_NAME}.${KUBE_INGRESS_BASE_DOMAIN}


  #variables:
    # kosko options
    #KOSKO_GENERATE_ARGS: --env dev jobs/indexing
# Download and assemble CSV data:
#   stage: assemble
#   image: ubuntu:20.04
#   rules:
#     if: $TRIGGER == "ASSEMBLE" # todo
#   script: |
#     apt-get update -y && apt-get install -y wget python3-pip
#     export DATA_DIR="./data"
#     export OUTPUT_DIR="./output"
#     mkdir $DATA_DIR
#     mkdir $OUTPUT_DIR
#     ./assembly/scripts/get-data.sh
#     pip3 install -r ./assembly/requirements.txt
#     python3 ./assembly/src/assemble_data.py ${DATA_DIR}/StockUniteLegale_utf8.zip  ${DATA_DIR}/geo/ ${DATA_DIR}/WEEZ.csv ${OUTPUT_DIR}/assembly.csv
#     ls -la $OUTPUT_DIR
#     tar -czvf $OUTPUT_DIR/assembly.tgz $OUTPUT_DIR/assembly.csv
#     ls -la $OUTPUT_DIR
#   artifacts:
#     paths:
#       - data/
#     expire_in: 4 hour


# Run Elastic indexation:
#   stage: index
#   artifacts:
#     paths:
#       - data/
#     expire_in: 4 hour
#   script:
#     - yarn install
#     - yarn build
#     - node dist/index.js
